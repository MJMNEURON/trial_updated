load_file("nrngui.hoc")
create soma

soma {
  
  nseg = 1
  diam = 76.58			
  L = 100
  cm = 1
}



soma {

	insert pas
	g_pas = 3.79e-5
	e_pas = -76.5			// to fit current-clamp data (was -71 to -73)
	cm = 0.88
	Ra = 173

	insert hh2		// insert fast spikes
	ena = 50
	ek = -100
	vtraub_hh2 = -52
	gnabar_hh2 = 0.01		// adapted to single-compartment
	gkbar_hh2 = 0.01 		// adapted to single-compartment

	insert itGHK		// T-current everywhere
	cai = 2.4e-4 
	cao = 2 
	eca = 120 
	shift_itGHK = -1	// screening charge shift + 3 mV error
	gcabar_itGHK = 0.0002
	qm_itGHK = 2.5
	qh_itGHK = 2.5

	insert cad		// calcium diffusion everywhere
	depth_cad = 0.1
	kt_cad = 0		// no pump
	kd_cad = 1e-4
	taur_cad = 5
	cainf_cad = 2.4e-4	
}



soma.pcabar_itGHK = 8e-5

//----------------------------------------------------------------------------
//  insert electrodes in the soma
//----------------------------------------------------------------------------
objref stim

soma stim=new IClamp(0.5)

//rectangular stimulation
//stim.amp=0.075
stim.del=0
stim.dur=900


//alternative stimulation sin
pi=3.1415
objref vec1, vec2, vec3, vec4, vec5, recv
vec1=new Vector(200, 0.05)
vec2=new Vector(500, 0.05)
vec3=new Vector(200, 0.05)
vec4=new Vector()
vec2.sin(5, pi/2)


vec4.append(vec1,vec2,vec3)
vec4.play(&stim.amp, 1)
//vec4.printf()


//----------------------------------------------------------------------------
//  transient time
//----------------------------------------------------------------------------

trans = 00

print " "
print ">> Transient time of ",trans," ms"
print " "


//----------------------------------------------------------------------------
//  setup simulation parameters
//----------------------------------------------------------------------------

Dt = 0.2
npoints = 4000

dt = 0.1			// must be submultiple of Dt
tstart = trans
tstop = trans + npoints * Dt
runStopAt = tstop
steps_per_ms = 1/Dt

celsius = 34			// temperature of John's experiments

v_init = -74			// approximate resting Vm

////////////////////////////////////
//saving input data
////////////////////////////////////

objref sadata
run()
sadata = new File()
sadata.wopen("thisisourinput.dat")
for i=1, 800{
    sadata.printf("%g %g \n", i, vec4.x[i-1])
}
sadata.close()

////////////////////////////////////
//saving response data
////////////////////////////////////

objref savdata, recv, rect
rect = new Vector()
recv = new Vector()
rect.record(&t)
recv.record(&soma.v(0.5))
run()
savdata = new File()
savdata.wopen("thisisouroutput.dat")
//recv.printf()

//for i=0,rect.size()-1 {
///   savdata.printf("%g %g\n", rect.x(i), recv.x(i))

//}
for i=1, 800{
    savdata.printf("%g %g \n", i, recv.x[i*10])
}

savdata.close()






