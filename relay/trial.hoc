load_file("nrngui.hoc")

xopen("cells/tc200.geo")		// read geometry file

corrD = 1			// no dendritic surface correction

G_pas = 3.79e-5
E_pas = -73			// to fit current-clamp data (was -71 to -73)
E_pas = -76.5			// within 3 mV error

forall { 			// insert passive current everywhere
	insert pas
	g_pas = G_pas * corrD
	e_pas = E_pas
	cm = 0.88 * corrD
	Ra = 173
	L = L
}

soma {
	g_pas = G_pas
	cm = 0.88

	insert hh2		// insert fast spikes
	ena = 50
	ek = -100
	vtraub_hh2 = -52
	gnabar_hh2 = 0.1
	gkbar_hh2 = 0.1
}


forall {
	insert itGHK		// T-current everywhere
	cai = 2.4e-4 
	cao = 2 
	eca = 120 
	shift_itGHK = -1	// screening charge shift + 3 mV error
	gcabar_itGHK = corrD * 0.0002
	qm_itGHK = 2.5
	qh_itGHK = 2.5

	insert cad		// calcium diffusion everywhere
	depth_cad = 0.1 * corrD
	kt_cad = 0		// no pump
	kd_cad = 1e-4
	taur_cad = 5
	cainf_cad = 2.4e-4	
}



xopen("loc200.oc")		// load procedures for localizing T-current


// uniform T-current with same density as in dissociated cells
// localize(1.7e-5,corrD*1.7e-5,corrD*1.7e-5)


// low density proximal, high distal, to match volt-clamp of intact cells
localize(1.7e-5,corrD*8.5e-5,corrD*8.5e-5)


//----------------------------------------------------------------------------
//  transient time
//----------------------------------------------------------------------------
trans = 00

print " "
print ">> Transient time of ",trans," ms"
print " "



//----------------------------------------------------------------------------
//  setup simulation parameters
//----------------------------------------------------------------------------
Dt = 0.2
npoints = 4000

dt = 0.1			// must be submultiple of Dt
tstart = trans
tstop = trans + npoints * Dt
runStopAt = tstop
steps_per_ms = 1/Dt
celsius = 34			// temperature of Johns experiments

v_init = -74			// approximate resting Vm


objref fspikes, vecspikes
fspikes=new File()


objref fih
fih = new FInitializeHandler("loadqueue()")

objref syn
objref netcon, nil

objref savdata, recv, rect, savspike


	
dend4[0] syn= new ExpSyn(0.5)
syn.tau=0.1
syn.i=1
syn.e=0
	
netcon = new NetCon(nil, syn)
netcon.weight = 1.425

proc loadqueue() { 
	for ii=0, vecspikes.size()-1 {netcon.event(vecspikes.x[ii])
}
}
objref datafile
strdef basename, extension, filename
extension ="dat"
basename = "cs0_0"

for count = 1, 10{
	fspikes.ropen("/home/major/trial/relay/mar_17/input/%s%d.%s", basename, count, extension)}
	vecspikes=new Vector()
	vecspikes.scanf(fspikes)
//for total=0, vecspikes.size()-1{ 
//	vecspikes.x(total)=vecspikes.x(total)*1000}
//	vecspikes.printf()


